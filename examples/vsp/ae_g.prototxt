force_backward: true
name: "AutoEncoder"
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  data_param {
    source: "examples/vsp/layer2_2channel256-4590-float_train_lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "data_split"
  type: "Slice"
  bottom: "data"
  top: "data_A"
  top: "data_B"
  slice_param {
    slice_point: 1
    axis: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data_A"
  top: "conv1"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "relu1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "relu1"
  top: "conv2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn2"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "relu2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "relu2"
  top: "conv3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "bn3"
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "relu3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "relu3"
  top: "conv4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "bn4"
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "relu4"
}
layer {
  name: "deconv3"
  type: "Deconvolution"
  bottom: "relu4"
  top: "deconv3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn5"
  type: "BatchNorm"
  bottom: "deconv3"
  top: "bn5"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn5"
  top: "relu5"
}
layer {
  name: "deconv2"
  type: "Deconvolution"
  bottom: "relu5"
  top: "deconv2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn6"
  type: "BatchNorm"
  bottom: "deconv2"
  top: "bn6"
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "bn6"
  top: "relu6"
}
layer {
  name: "deconv1"
  type: "Deconvolution"
  bottom: "relu6"
  top: "deconv1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn7"
  type: "BatchNorm"
  bottom: "deconv1"
  top: "bn7"
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "bn7"
  top: "relu7"
}
layer {
  name: "conv_output"
  type: "Convolution"
  bottom: "relu7"
  top: "conv_output"
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "output"
  type: "TanH"
  bottom: "conv_output"
  top: "output"
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "output"
  bottom: "data_B"
  top: "loss"
}
