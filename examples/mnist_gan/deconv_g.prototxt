force_backward: true
name: "DeconvolutionGenerator"
layer {
  name: "noise"
  type: "RandVec"
  top: "noise"
  randvec_param {
    batch_size: 256
    dim: 128
    lower: -1.0
    upper: 1.0
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "noise"
  top: "fc1"
  inner_product_param {
    num_output: 12544
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
  }
}
layer {
  name: "reshape"
  type: "Reshape"
  bottom: "fc1"
  top: "reshape_fc1"
  reshape_param {
    shape {
      dim: -1
      dim: 256
      dim: 7
      dim: 7
    }
  }
}
layer {
  name: "fc1_BN"
  type: "BatchNorm"
  bottom: "reshape_fc1"
  top: "fc1_BN"
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }   
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }  
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }
}
layer {
  name: "relu_fc1"
  type: "ReLU"
  bottom: "fc1_BN"
  top: "fc1_BN"
}
layer {
  name: "deconv2"           
  type: "Deconvolution"
  bottom: "fc1_BN"
  top: "deconv2"
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "deconv2_BN"
  type: "BatchNorm"
  bottom: "deconv2"
  top: "deconv2_BN"
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }   
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }  
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }
}
layer {
  name: "relu_deconv2"
  type: "ReLU"
  bottom: "deconv2_BN"
  top: "deconv2_BN"
}
layer {
  name: "deconv1"           
  type: "Deconvolution"
  bottom: "deconv2_BN"
  top: "deconv1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "deconv1_BN"
  type: "BatchNorm"
  bottom: "deconv1"
  top: "deconv1_BN"
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }   
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }  
  param {  
    lr_mult: 0  
    decay_mult: 0  
  }
}
layer {
  name: "relu_deconv1"
  type: "ReLU"
  bottom: "deconv1_BN"
  top: "deconv1_BN"
}
layer {
  name: "conv1"           
  type: "Convolution"
  bottom: "deconv1_BN"
  top: "conv1"
  convolution_param {
    num_output: 1
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "output"
  type: "TanH"
  bottom: "conv1"
  top: "conv1_tanh"
}

#layer {
#  name: "deconv0_crop"
#  type: "CropSimple"
#  bottom: "deconv3"
#  top: "deconv0_crop"
#  crop_param {
#     crop_height: 64
#     crop_width: 64
#  }
#}
#layer {
#  name: "generated"
#  type: "Eltwise"
#  bottom: "deconv3"
#  top: "generated"
#}
