force_backward: true
name: "SimpleGenerator"
layer {
  name: "noise"
  type: "RandVec"
  top: "noise"
  randvec_param {
    batch_size: 64
    dim: 128
    lower: -1.0
    upper: 1.0
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "noise"
  top: "fc1"
  inner_product_param {
    num_output: 16384
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
  }
}
layer {
  name: "reshape"
  type: "Reshape"
  bottom: "fc1"
  top: "reshape_fc1"
  reshape_param {
    shape {
      dim: 64
      dim: 1024
      dim: 4
      dim: 4
    }
  }
}
layer {
  name: "fc1_BN"
  type: "BatchNorm" include {phase: TRAIN}
  bottom: "reshape_fc1"
  top: "fc1_BN"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "fc1_BN"
  type: "BatchNorm" include { phase: TEST}
  bottom: "reshape_fc1"
  top: "fc1_BN"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu_fc1"
  type: "ReLU"
  bottom: "fc1_BN"
  top: "fc1_BN"
}
layer {
  name: "deconv3"           
  type: "Deconvolution"
  bottom: "fc1_BN"
  top: "deconv3"
  convolution_param {
    num_output: 512 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "deconv3_BN"
  type: "BatchNorm" include { phase: TRAIN}
  bottom: "deconv3"
  top: "deconv3_BN"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "deconv3_BN"
  type: "BatchNorm" include { phase: TEST}
  bottom: "deconv3"
  top: "deconv3_BN"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu_deconv3"
  type: "ReLU"
  bottom: "deconv3_BN"
  top: "deconv3_BN"
}
layer {
  name: "deconv2"           
  type: "Deconvolution"
  bottom: "deconv3_BN"
  top: "deconv2"
  convolution_param {
    num_output: 256 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "deconv2_BN"
  type: "BatchNorm" include { phase: TRAIN}
  bottom: "deconv2"
  top: "deconv2_BN"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "deconv2_BN"
  type: "BatchNorm" include { phase: TEST}
  bottom: "deconv2"
  top: "deconv2_BN"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "relu_deconv2"
  type: "ReLU"
  bottom: "deconv2_BN"
  top: "deconv2_BN"
}
layer {
  name: "deconv1"           
  type: "Deconvolution"
  bottom: "deconv2_BN"
  top: "deconv1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "deconv1_BN"
  type: "BatchNorm" include { phase: TRAIN}
  bottom: "deconv1"
  top: "deconv1_BN"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "deconv1_BN"
  type: "BatchNorm" include { phase: TEST}
  bottom: "deconv1"
  top: "deconv1_BN"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  name: "relu_deconv1"
  type: "ReLU"
  bottom: "deconv1_BN"
  top: "deconv1_BN"
}
layer {
  name: "conv1"           
  type: "Convolution"
  bottom: "deconv1_BN"
  top: "conv1"
  convolution_param {
    num_output: 3
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "output"
  type: "TanH"
  bottom: "conv1"
  top: "output"
}